/* Generated By:JJTree: Do not edit this line. ASTequal.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTequal extends SimpleNode {
  public ASTequal(int id) {
    super(id);
  }

  public ASTequal(Minimp p, int id) {
    super(p, id);
  }
  
  public Object interpret()
  {
	  if(this.jjtGetNumChildren() > 0 && this.jjtGetNumChildren() < 3)
	  {		  
		  // The second child is the right side of the equal sign  
		  Integer value = Integer.valueOf(this.jjtGetChild(1).interpret().toString());
		  
		  // The first child on the left side of the equal sign is the variable
		  String variable = this.jjtGetChild(0).interpret().toString();
		  
		  // Find variable in hash and assign value to it.
		  for (int i = scope; i >= 0; i--)
		  {
			  if(symtab.get(variable, i) != null)
			  {
				  symtab.put(variable, i, new VariableValue(value));
			  }
		  }
  
		  // Valid
		  return null;
	  }
	  
	  // ERROR
	  return null;
  }
}
/* JavaCC - OriginalChecksum=3a39fcc0d48e078fb5f3cb835fd6a00c (do not edit this line) */
