/* Generated By:JJTree: Do not edit this line. ASTdef_statement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */

import java.util.ArrayList;
import java.util.HashMap;

/*
 * Minimp -- An implementation of an imperative subset of Python
 *
 *
 * Copyright (C) 2013, Joseph Heron, Jonathan Gillett, and Daniel Smullen
 * All rights reserved.
 *
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
public
class ASTdef_statement extends SimpleNode {
	
	private Integer localScope;
	public HashMap<String, Object> prevValues = new HashMap<String, Object>();
	public ArrayList<ASTdef_statement> parents = new ArrayList<ASTdef_statement>();
	
  public ASTdef_statement(int id) {
    super(id);
  }

  public ASTdef_statement(Minimp p, int id) {
    super(p, id);
  }
  
  public Object interpret()
  {
	  // Check if the function already exists
	  if(symtab.get(((ASTarg_list)this.jjtGetChild(0)).getValue().toString(), scope) == null)
	  {
		  Node parent = this.jjtGetParent();
		  
		  while(parent != null)
		  {
			  
			  if(parent.getClass().isAssignableFrom(ASTdef_statement.class))
			  {
				  parents.add((ASTdef_statement) parent);
			  }
			  parent = parent.jjtGetParent();
		  }
		  
	  	  // Add function node to hash table so it can be called later 
	  	  this.localScope = scope;
		  
		  symtab.put(((ASTarg_list)this.jjtGetChild(0)).getValue().toString(), this.localScope, this);
		  
		  return this;
	  }
	  
	  // ERROR
	  return null;
  }

  public Integer getScope()
  {
      return localScope;
  }

}
/* JavaCC - OriginalChecksum=9e54365cc2c16b0828a03019a263de3b (do not edit this line) */
