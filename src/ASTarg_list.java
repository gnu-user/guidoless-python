/* Generated By:JJTree: Do not edit this line. ASTarg_list.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */

/*
 * Minimp -- An implementation of an imperative subset of Python
 *
 *
 * Copyright (C) 2013, Joseph Heron, Jonathan Gillett, and Daniel Smullen
 * All rights reserved.
 *
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
public
class ASTarg_list extends SimpleNode {
  public ASTarg_list(int id) {
    super(id);
  }

  public ASTarg_list(Minimp p, int id) {
    super(p, id);
  }
  
  public Object getValue()
  {
	  return this.jjtGetValue().toString();
  }
  @Override
  public Object interpret()
  {
	  // Go through children and add them to the list
	  String [] varNames = new String[this.jjtGetNumChildren()];
	  for(int i = 0; i < this.jjtGetNumChildren(); i++)
	  {
		  varNames[i] = this.jjtGetChild(i).interpret().toString();
		  symtab.put(varNames[i], scope, new VariableValue(null));
	  }
	  
	  return varNames;
  }
}
/* JavaCC - OriginalChecksum=9444113d2cb39685ef037ba6203c3984 (do not edit this line) */
