/* Generated By:JJTree: Do not edit this line. ASTif_statement.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=AST,NODE_EXTENDS=MyNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTif_statement extends SimpleNode {
  public ASTif_statement(int id) {
    super(id);
  }

  public ASTif_statement(Minimp p, int id) {
    super(p, id);
  }
  
  public Object interpret()
  {
	  if(this.jjtGetNumChildren() > 1)
	  {
		  int curCondCount = condCount;
		  condCount++;
		  
		  asmBuffer.add("beqz " + ((CompareValue)this.jjtGetChild(0).interpret()).interpret()
				  +  ", else_" + curCondCount);
		  //if(Boolean.valueOf(this.jjtGetChild(0).interpret().toString()))
		  //{
			  scope++;
			  for(int i = 1; i < this.jjtGetNumChildren(); i++)
			  {
				  Object returnValue = this.jjtGetChild(i).interpret();
				  
				  if(returnValue != null)
				  {
					  removeScope();
					  return returnValue;
				  }
			  }
			  asmBuffer.add("b if_" + curCondCount);
			  asmBuffer.add("else_" + curCondCount + ": nop");
			  removeScope();
			  return curCondCount;
		  //}
		  
		  // Return of null is equal to false
		  //return null;
	  }
	  
	  // Error
	  return null;
  }

}
/* JavaCC - OriginalChecksum=3e651db985b9a7052f9e9582d561e4a7 (do not edit this line) */
